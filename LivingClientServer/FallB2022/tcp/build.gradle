plugins {
  id 'java'
  id "com.google.protobuf" version "0.8.13" apply true
  id 'idea' apply true
}

repositories {
  mavenCentral()
}

dependencies {
  // https://mvnrepository.com/artifact/org.json/json
  implementation group: 'org.json', name: 'json', version: '20200518'
  implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.18.0'
}

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.21.1'
  }
  generateProtoTasks {
    all().each { task ->
      task.builtins {
      }
    }
  }
}

def port = 8080
def host = 'localhost'
def limit = 5

task arguments {
  if (project.hasProperty("port")) {
    port = project.getProperty("port")
  }
  if (project.hasProperty("host")) {
    host = project.getProperty("host")
  }
  if (project.hasProperty("limit")) {
    host = project.getProperty("limit")
  }
}

task runClient(type: JavaExec) {
  group 'client'
  description 'Runs the client'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Client'
  standardInput = System.in

  args host
  args port
}

task runVoter(type: JavaExec) {
  group 'client'
  description 'Runs voter'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Voter'

  args host
  args port
}

task runServer(type: JavaExec) {
  group 'server'
  description 'Runs the server'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Server'
  args port
  args limit
}

sourceSets {
  main {
    java {
      srcDirs 'build/generated/source/proto/main/java'
    }
  }
}
